plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

repositories {
   mavenCentral()
   maven { url 'https://jitpack.io' }
   
}

dependencies {
	// jsp
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'	
    // jakarta jstl
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.0'
	// 로그인에 사용할 oauth 2.0 추가
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // security oauth를 위해 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // email 비밀번호 찾기에 쓰임
    implementation 'org.apache.commons:commons-email:1.5'	
    // jackson
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2' 
     // fileupload
    implementation 'commons-fileupload:commons-fileupload:1.5'        
    // websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'  	
    // payment
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.21'
    // devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
